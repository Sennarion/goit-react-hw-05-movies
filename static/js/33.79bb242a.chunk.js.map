{"version":3,"file":"static/js/33.79bb242a.chunk.js","mappings":"4PAGaA,EAAUC,EAAAA,GAAAA,IAAH,gFAMPC,EAASD,EAAAA,GAAAA,IAAH,6CAINE,EAAcF,EAAAA,GAAAA,IAAH,6EAKXG,EAAYH,EAAAA,GAAAA,IAAH,mFAMTI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,yJ,kBC4CrB,MAxDA,WAAyB,IAAD,IACtB,GAA0BM,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAS7C,IAPAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,aACgBP,GACbQ,KAAKT,GACLU,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACV,KAECF,EACH,OAAO,KAGT,IAAQe,EAA+Cf,EAA/Ce,YAAaC,EAAkChB,EAAlCgB,MAAOC,EAA2BjB,EAA3BiB,SAAUC,EAAiBlB,EAAjBkB,aAChCC,EAASnB,EAAMmB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACpDC,EAAmC,GAA1BN,EAAaO,QAAQ,GAAU,IACxCC,EAASX,EAAW,0CACaA,GACnC,8EAEJ,OACE,UAAC,IAAD,YACE,UAACvB,EAAD,YACE,SAACE,EAAD,CAAQiC,IAAKD,EAAQE,IAAKZ,KAC1B,UAACpB,EAAD,YACE,UAACD,EAAD,YACE,wBAAKqB,KACL,SAACnB,EAAD,CAAUgC,GAAIzB,EAAd,yBAEF,uCAAeoB,MACf,sCACA,uBAAIP,KACJ,oCACA,uBAAIE,KACJ,UAAC3B,EAAD,YACE,SAACK,EAAD,CAAUgC,GAAG,OAAOvB,MAAO,CAAEC,KAAMH,GAAnC,mBAGA,SAACP,EAAD,CAAUgC,GAAG,UAAUvB,MAAO,CAAEC,KAAMH,GAAtC,+BAMN,SAAC,EAAA0B,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-bottom: 40px;\n`;\n\nexport const Poster = styled.img`\n  max-width: 350px;\n`;\n\nexport const MovieHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const LinkItem = styled(Link)`\n  display: block;\n  color: #fff;\n  text-align: center;\n  background-color: #fcba03;\n  padding: 10px;\n  border-radius: 4px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { api } from 'services/api';\nimport {\n  Wrapper,\n  MovieHeader,\n  LinkItem,\n  Poster,\n  MovieInfo,\n} from './MovieDetails.styled';\nimport { Container } from 'components/Container/Container.styled';\n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    api\n      .getMovieById(movieId)\n      .then(setMovie)\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, title, overview, vote_average } = movie;\n  const genres = movie.genres.map(genre => genre.name).join(', ');\n  const rating = vote_average.toFixed(1) * 10 + '%';\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://dummyimage.com/395x592/000/fff.jpg&text=MOVIE+POSTER+IS+NOT+DEFINED';\n\n  return (\n    <Container>\n      <Wrapper>\n        <Poster src={poster} alt={title} />\n        <MovieInfo>\n          <MovieHeader>\n            <h2>{title}</h2>\n            <LinkItem to={backLinkHref}>Go back</LinkItem>\n          </MovieHeader>\n          <p>Userscore: {rating}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n          <Wrapper>\n            <LinkItem to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </LinkItem>\n            <LinkItem to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </LinkItem>\n          </Wrapper>\n        </MovieInfo>\n      </Wrapper>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["Wrapper","styled","Poster","MovieHeader","MovieInfo","LinkItem","Link","useState","movie","setMovie","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","api","then","catch","err","console","log","poster_path","title","overview","vote_average","genres","map","genre","name","join","rating","toFixed","poster","src","alt","to","Suspense","fallback"],"sourceRoot":""}